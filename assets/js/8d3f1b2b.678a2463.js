"use strict";(self.webpackChunksmart_grow_capiro=self.webpackChunksmart_grow_capiro||[]).push([[4908],{8767:(n,r,a)=>{a.r(r),a.d(r,{assets:()=>t,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>i});var e=a(5893),s=a(1151);const l={id:"garlands-controllers-js",title:"garlands.controllers.js"},o="Archivo garlands.controllers.js",d={id:"APIDocs/Archivos/controllers/garlands-controllers-js",title:"garlands.controllers.js",description:"El archivo garlands.controllers.js contiene los controladores encargados de gestionar las operaciones relacionadas con las guirnaldas en la API. Estos controladores se encargan de buscar guirnaldas, crear nuevas guirnaldas, actualizar guirnaldas existentes y eliminar guirnaldas.",source:"@site/docs/APIDocs/Archivos/controllers/garlands.md",sourceDirName:"APIDocs/Archivos/controllers",slug:"/APIDocs/Archivos/controllers/garlands-controllers-js",permalink:"/docs/APIDocs/Archivos/controllers/garlands-controllers-js",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"garlands-controllers-js",title:"garlands.controllers.js"},sidebar:"tutorialSidebar",previous:{title:"control.controllers.js",permalink:"/docs/APIDocs/Archivos/controllers/control-controllers-js"},next:{title:"user.controllers.js",permalink:"/docs/APIDocs/Archivos/controllers/user-controllers-js"}},t={},i=[{value:"Contenido del Archivo",id:"contenido-del-archivo",level:2},{value:"Descripci\xf3n",id:"descripci\xf3n",level:2}];function c(n){const r={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(r.h1,{id:"archivo-garlandscontrollersjs",children:["Archivo ",(0,e.jsx)(r.code,{children:"garlands.controllers.js"})]}),"\n",(0,e.jsxs)(r.p,{children:["El archivo ",(0,e.jsx)(r.code,{children:"garlands.controllers.js"})," contiene los controladores encargados de gestionar las operaciones relacionadas con las guirnaldas en la API. Estos controladores se encargan de buscar guirnaldas, crear nuevas guirnaldas, actualizar guirnaldas existentes y eliminar guirnaldas."]}),"\n",(0,e.jsx)(r.h2,{id:"contenido-del-archivo",children:"Contenido del Archivo"}),"\n",(0,e.jsx)(r.pre,{children:(0,e.jsx)(r.code,{className:"language-jsx",children:"// Importar el modelo de Garland y la instancia de la aplicaci\xf3n\r\nimport Garland from '../models/garland.model.js';\r\nimport app from '../app.js';\r\n\r\n// Controlador para buscar guirnaldas\r\nexport const findGarlands = async (req, res) => {\r\n    res.writeHead(200, {\r\n        'Content-Type': 'text/event-stream',\r\n        'Cache-Control': 'no-cache',\r\n        'Connection': 'keep-alive'\r\n    });\r\n\r\n    const garlands = await Garland.find();\r\n    res.write(`data: ${JSON.stringify(garlands)}\\n\\n`);\r\n\r\n    // Actualizar la informaci\xf3n de guirnaldas al recibir el evento 'garland'\r\n    app.on('garland', async () => {\r\n        const garlands = await Garland.find();\r\n        res.write(`data: ${JSON.stringify(garlands)}\\n\\n`);\r\n    });\r\n};\r\n\r\n// Controlador para crear una nueva guirnalda\r\nexport const createGarland = async (req, res) => {\r\n    const { bloque, guirnalda } = req.body;\r\n\r\n    try {\r\n        // Verificar si la guirnalda ya est\xe1 almacenada\r\n        const foundGarland = await Garland.findOne({ bloque, guirnalda });\r\n        if (foundGarland) {\r\n            return res.json({\r\n                status: false,\r\n                message: \"La guirnalda ya se encuentra almacenada\"\r\n            });\r\n        }\r\n\r\n        // Crear una nueva guirnalda y guardarla\r\n        const newGarland = new Garland(req.body);\r\n        const garlandSaved = await newGarland.save();\r\n\r\n        res.status(200).json({\r\n            status: true,\r\n            message: \"Guirnalda creada con \xe9xito\",\r\n            garland: garlandSaved\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: false,\r\n            message: \"La guirnalda no pudo ser creada\",\r\n            error\r\n        });\r\n    }\r\n};\r\n\r\n// Controlador para actualizar una guirnalda existente\r\nexport const updateGarland = async (req, res) => {\r\n    try {\r\n        const idGarland = req.params.id;\r\n        // Actualizar la guirnalda y emitir el evento 'garland'\r\n        const garlandUpdated = await Garland.findByIdAndUpdate(idGarland, req.body, {\r\n            new: true\r\n        });\r\n        app.emit('garland');\r\n\r\n        res.status(200).json({\r\n            status: true,\r\n            message: \"Guirnalda actualizada\",\r\n            garland: garlandUpdated\r\n        });\r\n    } catch (error) {\r\n        res.json({\r\n            status: false,\r\n            message: \"La guirnalda no pudo ser actualizada\",\r\n            error\r\n        });\r\n    }\r\n};\r\n\r\n// Controlador para eliminar una guirnalda\r\nexport const deleteGarland = async (req, res) => {\r\n    const garlandDelete = await Garland.findByIdAndDelete(req.params.id);\r\n    res.json(garlandDelete);\r\n};\n"})}),"\n",(0,e.jsx)(r.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,e.jsxs)(r.ul,{children:["\n",(0,e.jsxs)(r.li,{children:["\n",(0,e.jsx)(r.p,{children:(0,e.jsxs)(r.strong,{children:["Controlador ",(0,e.jsx)(r.code,{children:"findGarlands"}),":"]})}),"\n",(0,e.jsxs)(r.ul,{children:["\n",(0,e.jsx)(r.li,{children:"Este controlador busca guirnaldas y env\xeda eventos de actualizaci\xf3n cuando se agrega, actualiza o elimina una guirnalda."}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(r.li,{children:["\n",(0,e.jsx)(r.p,{children:(0,e.jsxs)(r.strong,{children:["Controlador ",(0,e.jsx)(r.code,{children:"createGarland"}),":"]})}),"\n",(0,e.jsxs)(r.ul,{children:["\n",(0,e.jsx)(r.li,{children:"Crea una nueva guirnalda y la almacena en la base de datos, verificando previamente si ya existe."}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(r.li,{children:["\n",(0,e.jsx)(r.p,{children:(0,e.jsxs)(r.strong,{children:["Controlador ",(0,e.jsx)(r.code,{children:"updateGarland"}),":"]})}),"\n",(0,e.jsxs)(r.ul,{children:["\n",(0,e.jsx)(r.li,{children:"Actualiza una guirnalda existente y emite el evento 'garland' para notificar cambios."}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(r.li,{children:["\n",(0,e.jsx)(r.p,{children:(0,e.jsxs)(r.strong,{children:["Controlador ",(0,e.jsx)(r.code,{children:"deleteGarland"}),":"]})}),"\n",(0,e.jsxs)(r.ul,{children:["\n",(0,e.jsx)(r.li,{children:"Elimina una guirnalda seg\xfan su identificador."}),"\n"]}),"\n"]}),"\n"]})]})}function u(n={}){const{wrapper:r}={...(0,s.a)(),...n.components};return r?(0,e.jsx)(r,{...n,children:(0,e.jsx)(c,{...n})}):c(n)}},1151:(n,r,a)=>{a.d(r,{Z:()=>d,a:()=>o});var e=a(7294);const s={},l=e.createContext(s);function o(n){const r=e.useContext(l);return e.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function d(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),e.createElement(l.Provider,{value:r},n.children)}}}]);