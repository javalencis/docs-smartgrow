"use strict";(self.webpackChunksmart_grow_capiro=self.webpackChunksmart_grow_capiro||[]).push([[1386],{6196:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var a=s(5893),i=s(1151);const o={id:"getting-started",title:"Comenzando",sidebar_label:"Comenzando",sidebar_position:2},c="Comenzando",r={id:"APIDocs/getting-started",title:"Comenzando",description:"Ahora que has completado la instalaci\xf3n, es el momento de conocer los conceptos fundamentales de nuestra aplicaci\xf3n",source:"@site/docs/APIDocs/comenzando.md",sourceDirName:"APIDocs",slug:"/APIDocs/getting-started",permalink:"/docs/APIDocs/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"getting-started",title:"Comenzando",sidebar_label:"Comenzando",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Instalaci\xf3n",permalink:"/docs/APIDocs/installation"},next:{title:"Descripci\xf3n de Archivos",permalink:"/docs/category/descripci\xf3n-de-archivos-1"}},t={},l=[{value:"Conceptos Fundamentales",id:"conceptos-fundamentales",level:2},{value:"Estructura del Proyecto",id:"estructura-del-proyecto",level:3},{value:"Definiciones",id:"definiciones",level:3},{value:"API REST",id:"api-rest",level:4},{value:"MQTT (Message Queuing Telemetry Transport)",id:"mqtt-message-queuing-telemetry-transport",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"comenzando",children:"Comenzando"}),"\n",(0,a.jsx)(n.p,{children:"Ahora que has completado la instalaci\xf3n, es el momento de conocer los conceptos fundamentales de nuestra aplicaci\xf3n"}),"\n",(0,a.jsx)(n.h2,{id:"conceptos-fundamentales",children:"Conceptos Fundamentales"}),"\n",(0,a.jsx)(n.h3,{id:"estructura-del-proyecto",children:"Estructura del Proyecto"}),"\n",(0,a.jsx)(n.p,{children:"Nuestra aplicaci\xf3n tiene la siguiente estructura:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-plaintext",children:"my-app/\r\n|-- src/\r\n|   |-- controllers/\r\n|   |-- libs/\r\n|   |-- middlewares/\r\n|   |-- models/\r\n|   |-- mqtt/\r\n|   |-- routes/\r\n|   |-- schemas/\r\n|   |-- app.js\r\n|   |-- db.js\r\n|   |-- index.js\r\n|-- node_modules/\r\n|-- .env\r\n|-- package.json\r\n|-- ...\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"src/"})}),": Este directorio contiene todo el c\xf3digo fuente de tu aplicaci\xf3n."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"controllers/"})}),": Almacena los controladores que manejan las funciones l\xf3gicas de la aplicaci\xf3n. Aqu\xed, puedes encontrar archivos que contienen funciones que se utilizan para gestionar las peticiones HTTP y las respuestas correspondientes."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"libs/"})}),": Contiene m\xf3dulos y funciones compartidas que pueden ser utilizadas en diferentes partes de la aplicaci\xf3n."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"middlewares/"})}),": Aqu\xed se guardan los middleware, funciones intermedias que procesan las peticiones HTTP antes de llegar a las rutas finales. Los middleware son \xfatiles para realizar tareas como la validaci\xf3n de autenticaci\xf3n, el manejo de errores, etc."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"models/"})}),": Almacena los modelos de datos que representan las estructuras de datos de tu aplicaci\xf3n. Los modelos suelen corresponder a las tablas de la base de datos y definen c\xf3mo interactuar con ellas."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"mqtt/"})}),": Contiene archivos relacionados con el protocolo MQTT (Message Queuing Telemetry Transport). Aqu\xed puedes encontrar l\xf3gica relacionada con la comunicaci\xf3n por mensajes."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"routes/"})}),": Aqu\xed se definen las rutas de la aplicaci\xf3n. Cada archivo puede contener un conjunto de rutas relacionadas con una entidad o caracter\xedstica espec\xedfica de tu API."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"schemas/"})}),": Almacena los esquemas de validaci\xf3n para los datos que entran o salen de la aplicaci\xf3n. Los esquemas son \xfatiles para asegurar la consistencia y validez de los datos."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"app.js"})}),": Contiene la configuraci\xf3n principal de tu aplicaci\xf3n. Aqu\xed, se pueden definir y configurar los middleware, rutas y cualquier otra configuraci\xf3n global de la aplicaci\xf3n."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"db.js"})}),": Archivo que gestiona la conexi\xf3n a la base de datos. Aqu\xed se inicializa y se establece la conexi\xf3n con la base de datos."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"index.js"})}),": Es el punto de entrada principal de tu aplicaci\xf3n. Aqu\xed se inicia el servidor y se configura para escuchar las peticiones HTTP."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"node_modules/"})}),": Este directorio contiene todas las dependencias instaladas por npm. No es necesario incluirlo en tu control de versiones, ya que se puede reconstruir utilizando el archivo ",(0,a.jsx)(n.code,{children:"package.json"})," y ",(0,a.jsx)(n.code,{children:"package-lock.json"})," (o ",(0,a.jsx)(n.code,{children:"yarn.lock"}),")."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:".env"})}),": Archivo de configuraci\xf3n que puede contener variables de entorno. Estas variables se pueden utilizar para almacenar informaci\xf3n sensible, como claves de API o configuraciones espec\xedficas del entorno."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"package.json"})}),": Archivo que contiene la configuraci\xf3n y metadatos de tu proyecto, as\xed como las dependencias necesarias para ejecutar la aplicaci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Esta estructura t\xedpica de archivos sigue las convenciones comunes en aplicaciones Node.js y proporciona una organizaci\xf3n clara y modular del c\xf3digo. Cada directorio tiene un prop\xf3sito espec\xedfico para facilitar el mantenimiento y la escalabilidad del proyecto."}),"\n",(0,a.jsx)(n.h3,{id:"definiciones",children:"Definiciones"}),"\n",(0,a.jsx)(n.h4,{id:"api-rest",children:(0,a.jsx)(n.a,{href:"https://www.redhat.com/es/topics/api/what-is-a-rest-api",children:"API REST"})}),"\n",(0,a.jsx)(n.p,{children:"Una API REST (Interfaz de Programaci\xf3n de Aplicaciones basada en Transferencia de Estado Representacional) es un estilo arquitect\xf3nico que define un conjunto de restricciones y principios para el dise\xf1o de servicios web. En una API REST, los recursos (como datos o servicios) son identificados por URL, y las operaciones sobre esos recursos se representan mediante los m\xe9todos HTTP est\xe1ndar (GET, POST, PUT, DELETE, etc.). La comunicaci\xf3n entre el cliente y el servidor es stateless (sin estado), lo que significa que cada solicitud del cliente al servidor contiene toda la informaci\xf3n necesaria para comprender y procesar la solicitud. Adem\xe1s, los datos suelen transferirse en formatos est\xe1ndar como JSON o XML. Las API REST son ampliamente utilizadas para construir aplicaciones web y m\xf3viles debido a su simplicidad, escalabilidad y facilidad de consumo."}),"\n",(0,a.jsx)(n.h4,{id:"mqtt-message-queuing-telemetry-transport",children:(0,a.jsx)(n.a,{href:"https://aws.amazon.com/es/what-is/mqtt/",children:"MQTT (Message Queuing Telemetry Transport)"})}),"\n",(0,a.jsx)(n.p,{children:"MQTT es un protocolo de mensajer\xeda ligero y eficiente dise\xf1ado para la comunicaci\xf3n entre dispositivos en redes con ancho de banda limitado o conexiones inestables. Utiliza el modelo de publicaci\xf3n/suscripci\xf3n, donde los dispositivos pueden actuar como editores (publicadores) que env\xedan mensajes a temas espec\xedficos, y otros dispositivos pueden suscribirse a esos temas para recibir dichos mensajes. MQTT es especialmente adecuado para el Internet de las cosas (IoT) y situaciones en las que se requiere una comunicaci\xf3n as\xedncrona y de bajo consumo de energ\xeda. Este protocolo minimiza la sobrecarga de red y permite una comunicaci\xf3n eficiente entre dispositivos, lo que lo convierte en una elecci\xf3n popular para implementaciones de sistemas de monitoreo, control y automatizaci\xf3n."})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>c});var a=s(7294);const i={},o=a.createContext(i);function c(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);